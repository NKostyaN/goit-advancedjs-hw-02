{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import '../css/styles.css';\nimport flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst STORAGE_KEY = 'timer-user-selected-date';\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnStartEl = document.querySelector('[data-start]');\nconst btnResetEl = document.querySelector('[data-reset]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nbtnStartEl.disabled = true;\nbtnResetEl.disabled = true;\nbtnStartEl.addEventListener('click', startBtnClick);\nbtnResetEl.addEventListener('click', resetBtnClick);\n\nlet userSelectedDate = null;\nlet timeInterval = null;\n\ninitTimer();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    handleSelectedDate();\n  },\n};\n\nconst fp = flatpickr(inputEl, options);\n\nfunction handleSelectedDate() {\n  if (Date.now() >= userSelectedDate) {\n    resetTimer();\n    showError();\n    return;\n  }\n  btnStartEl.disabled = false;\n  //   btnResetEl.disabled = false;\n  //   inputEl.disabled = true;\n}\n\nfunction showError() {\n  iziToast.error({\n    timeout: 5000,\n    position: 'topRight',\n    transitionIn: 'bounceInDown',\n    transitionOut: 'fadeOutUp',\n    transitionInMobile: 'bounceInDown',\n    transitionOutMobile: 'fadeOutUp',\n    displayMode: 'replace',\n    titleSize: '16px',\n    messageSize: '16px',\n    backgroundColor: '#ef4040',\n    theme: 'dark',\n    title: 'Error',\n    message: 'Please choose a date in the future',\n  });\n}\n\nfunction startBtnClick() {\n  if (localStorage.getItem(STORAGE_KEY) === null) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(userSelectedDate));\n  }\n  btnStartEl.disabled = true;\n  btnResetEl.disabled = false;\n  inputEl.disabled = true;\n  visualizeInterval();\n  timeInterval = setInterval(visualizeInterval, 1000);\n}\n\nfunction visualizeInterval() {\n  const timeLeft = userSelectedDate - Date.now();\n  if (timeLeft <= 0) {\n    resetBtnClick();\n    return;\n  }\n\n  const convertedMs = convertMs(timeLeft);\n  daysEl.textContent = addLeadingZero(convertedMs.days);\n  hoursEl.textContent = addLeadingZero(convertedMs.hours);\n  minutesEl.textContent = addLeadingZero(convertedMs.minutes);\n  secondsEl.textContent = addLeadingZero(convertedMs.seconds);\n}\n\nfunction resetBtnClick() {\n  if (timeInterval != null) clearInterval(timeInterval);\n  resetTimer();\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction resetTimer() {\n  localStorage.removeItem(STORAGE_KEY);\n  btnStartEl.disabled = true;\n  btnResetEl.disabled = true;\n  inputEl.disabled = false;\n  daysEl.textContent = '00';\n  hoursEl.textContent = '00';\n  minutesEl.textContent = '00';\n  secondsEl.textContent = '00';\n}\n\nfunction initTimer() {\n  userSelectedDate = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  if (userSelectedDate === null) {\n    return;\n  }\n\n  handleSelectedDate();\n  startBtnClick();\n}\n"],"names":["STORAGE_KEY","inputEl","btnStartEl","btnResetEl","daysEl","hoursEl","minutesEl","secondsEl","startBtnClick","resetBtnClick","userSelectedDate","timeInterval","initTimer","options","selectedDates","handleSelectedDate","flatpickr","resetTimer","showError","iziToast","visualizeInterval","timeLeft","convertedMs","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAMA,MAAMA,EAAc,2BACdC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDL,EAAW,SAAW,GACtBC,EAAW,SAAW,GACtBD,EAAW,iBAAiB,QAASM,CAAa,EAClDL,EAAW,iBAAiB,QAASM,CAAa,EAElD,IAAIC,EAAmB,KACnBC,EAAe,KAEnBC,IAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAAE,QAAO,EAC3CC,GACD,CACH,EAEWC,EAAUf,EAASY,CAAO,EAErC,SAASE,GAAqB,CAC5B,GAAI,KAAK,IAAK,GAAIL,EAAkB,CAClCO,IACAC,IACA,MACD,CACDhB,EAAW,SAAW,EAGxB,CAEA,SAASgB,GAAY,CACnBC,EAAS,MAAM,CACb,QAAS,IACT,SAAU,WACV,aAAc,eACd,cAAe,YACf,mBAAoB,eACpB,oBAAqB,YACrB,YAAa,UACb,UAAW,OACX,YAAa,OACb,gBAAiB,UACjB,MAAO,OACP,MAAO,QACP,QAAS,oCACb,CAAG,CACH,CAEA,SAASX,GAAgB,CACnB,aAAa,QAAQR,CAAW,IAAM,MACxC,aAAa,QAAQA,EAAa,KAAK,UAAUU,CAAgB,CAAC,EAEpER,EAAW,SAAW,GACtBC,EAAW,SAAW,GACtBF,EAAQ,SAAW,GACnBmB,IACAT,EAAe,YAAYS,EAAmB,GAAI,CACpD,CAEA,SAASA,GAAoB,CAC3B,MAAMC,EAAWX,EAAmB,KAAK,IAAG,EAC5C,GAAIW,GAAY,EAAG,CACjBZ,IACA,MACD,CAED,MAAMa,EAAcC,EAAUF,CAAQ,EACtCjB,EAAO,YAAcoB,EAAeF,EAAY,IAAI,EACpDjB,EAAQ,YAAcmB,EAAeF,EAAY,KAAK,EACtDhB,EAAU,YAAckB,EAAeF,EAAY,OAAO,EAC1Df,EAAU,YAAciB,EAAeF,EAAY,OAAO,CAC5D,CAEA,SAASb,GAAgB,CACnBE,GAAgB,MAAM,cAAcA,CAAY,EACpDM,GACF,CAEA,SAASM,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASb,GAAa,CACpB,aAAa,WAAWjB,CAAW,EACnCE,EAAW,SAAW,GACtBC,EAAW,SAAW,GACtBF,EAAQ,SAAW,GACnBG,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,IAC1B,CAEA,SAASK,GAAY,CACnBF,EAAmB,KAAK,MAAM,aAAa,QAAQV,CAAW,CAAC,EAC3DU,IAAqB,OAIzBK,IACAP,IACF"}